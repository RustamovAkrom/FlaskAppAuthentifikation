[alembic]
# path to migration scripts
script_location = migrations

# template used to generate migration file names; see python datetime module
file_template = %%(rev)s_%%(slug)s

# timezone to use when rendering the date within the migration file as
# well as the filename.
# string value is passed to dateutil.tz.gettz()
# (or as of 0.9.0, can be "utc")
timezone = UTC

[loggers]
keys = root,sqlalchemy,alembic

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = WARN
handlers = console
qualname =

[logger_sqlalchemy]
level = WARN
handlers = console
qualname = sqlalchemy.engine

[logger_alembic]
level = INFO
handlers = console
qualname = alembic

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(levelname)-5.5s [%(name)s] %(message)s

# If you want to use SQLAlchemy's log formatting, instead of the default
# Alembic log formatting, uncomment the line below:
# format = %(asctime)s %(levelname)-5.5s [%(name)s] %(message)s

# customize the Pylons controller logger
#formatter_pylons = %(asctime)s %(message)s

[alembic:exclude]
# patterns of files to exclude from new revisions (such as tests)
# multiple patterns can be separated by commas
patterns = tests/*,migrations/env.py,migrations/alembic.ini,migrations/versions/*.py

# Logging configuration to apply when running alembic migrations
# If this section is omitted, the standard Alembic logging configuration
# will be used.
[logger_alembic_migration]
level = INFO
handlers = console
qualname = alembic.migration

# Use this section to configure additional loggers that are specific to your
# application.
# [logger_myapp]
# level = INFO
# handlers = console
# qualname = myapp
